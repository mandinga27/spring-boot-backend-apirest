name: SonarCloud analysis

on:
  push:
    branches: [ "main", "develop2", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.11.1
        #uses: gradle/gradle-build-action@v2.11.1
        #run: |
        #  ./gradlew build
      - name: SonarCloud Scan Review
        #uses: SonarSource/sonarcloud-github-action@master
        uses: jinguji/sonarcloud-gradle-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          # Additional arguments for the sonarcloud scanner
          args: >
            -Dsonar.projectKey=mandinga27_spring-boot-backend-apirest \
            -Dsonar.organization=mandinga27 \
            -Dsonar.sources=src/main -Dsonar.tests=src/test \
            -Dsonar.qualitygate.wait=true \                 
            -Dsonar.host.url=https://sonarcloud.io

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          scanMetadataReportFile: build/sonar/report-task.txt