name: SonarCloud analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:

          
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-java@v2.5.1
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle Build Action
        uses: gradle/gradle-build-action@982da8e78c05368c70dac0351bb82647a9e9a5d2
        #uses: gradle/gradle-build-action@v2.11.1
        #run: |
        #  ./gradlew build
      - name: Analyze with SonarCloud

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            -Dsonar.projectKey=mandinga27_spring-boot-backend-apirest \
            -Dsonar.organization=mandinga27 \
            -Dsonar.sources=src/main -Dsonar.tests=src/test \
            -Dsonar.qualitygate.wait=true \                 
            -Dsonar.host.url=https://sonarcloud.io
