name: Veracode Static Pipeline Scanner

on:
  workflow_call:
    inputs:
      policy_name:
        required: true
        type: string
      owner:
        required: true
        type: string
      repo:
        required: true
        type: string
      sha:
        required: true
        type: string
      token:
        required: true
        type: string
      ref:
        required: true
        type: string
      create_code_scanning_alert:
        required: true
        type: boolean
      create_issue:
        required: true
        type: boolean
      check_run_id:
        required: true
        type: string
      source_repository:
        required: true
        type: string
      profile_name:
        required: true
        type: string
      break_build_policy_findings:
        required: true
        type: string
      break_build_on_error:
        required: true
        type: string
      filter_mitigated_flaws:
        required: true
        type: string
      language:
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          #cache: 'gradle'
      - run: |
          chmod +x gradlew; ./gradlew clean build -x test
          pwd
          ls -la

      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: build/libs/*.jar

      - name: list files
        run: ls -R
      #- name: Veracode Upload and Scan Action Step
      #  uses: ./ # Uses an action in the root directory
      #  id: upload_and_scan
      #  with:
      #    appname: '${{ github.repository }}'
      #    version: '${{ github.run_id }}'
      #    filepath: 'binaries_to_upload/*.jar'
      #    vid: '${{ secrets.VERACODE_API_ID }}'
      #    vkey: '${{ secrets.VERACODE_API_KEY }}'
      #    createsandbox: true
          #sandboxname: 'Github - ${{ github.ref }}'
      #    scantimeout: 15
      #    criticality: 'VeryHigh'
      #    createprofile: false


  veracode-pipeline-scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-artifact
          path: build/libs/ # Ruta donde quieres descargar el artefacto

      - name: Run Veracode Pipeline Scan
        uses: ./
        with:
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          file: build/libs/spring-boot-backend-apirest-0.0.1-SNAPSHOT.jar
          token: ${{  secrets.GH_PAT }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}


      - name: Veracode Pipeline Results
        if: always()
        id: prepare-results
        uses: Veracode/github-actions-integration-helper@v0.1.4
        with:
          action: 'preparePipelineResults'
          token: ${{ inputs.token }}
          check_run_id: ${{ inputs.check_run_id }}
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          appname: ${{ inputs.profile_name }}
          source_repository: ${{ inputs.source_repository }}
          fail_checks_on_policy: ${{ inputs.break_build_policy_findings }}
          fail_checks_on_error: ${{ inputs.break_build_on_error }}
          filter_mitigated_flaws: ${{ inputs.filter_mitigated_flaws }}



