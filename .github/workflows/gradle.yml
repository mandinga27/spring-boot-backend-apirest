# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main", "develop2", "feat-vulns" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission to gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build -x test

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: build/libs/spring-boot-backend-apirest.jar
        run: ls -R

  analize:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          run: ./gradlew sonarqube -Dsonar.login=${{ secrets.SONARCLOUD_TOKEN }} -Dsonar.projectKey=mandinga27_spring-boot-backend-apirest -Dsonar.organization=mandinga27 -Dsonar.sources=src/main -Dsonar.tests=src/test -Dsonar.java.binaries=target/classes -Dsonar.qualitygate.wait=true -Dsonar.host.url=https://sonarcloud.io


          
        





